name: CI
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
jobs:
 filter:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: dorny/paths-filter@v2
      name: Get List of changed files 
      id: filter
      with:
        list-files: json
        filters: |
         changed:
          - '*.yml' 
    outputs:
      listOfChangedFiles : ${{ steps.filter.outputs.changed_files }}
      
 show-result:
    needs:  filter
    runs-on: ubuntu-latest
    steps:
      - name: print changes
        id : show-result
        run : echo "${{ needs.filter.outputs.listOfChangedFiles}}"
    outputs:
      changedFiles: ${{ needs.filter.outputs.listOfChangedFiles}}
 
 convertAndSend:
    needs: show-result
    runs-on: ubuntu-latest
    env:
      FILES: ${{ needs.show-result.outputs.changedFiles}}
    steps:
      - name: Convert yaml to json and send
        id: convertAndSend
        run: |
         function parse_yaml {
           local prefix=$2
           local s='[[:space:]]*' w='[a-zA-Z0-9_]*' fs=$(echo @|tr @ '\034')
           sed -ne "s|^\($s\):|\1|" \
                -e "s|^\($s\)\($w\)$s:$s[\"']\(.*\)[\"']$s\$|\1$fs\2$fs\3|p" \
                -e "s|^\($s\)\($w\)$s:$s\(.*\)$s\$|\1$fs\2$fs\3|p"  $1 |
           awk -F$fs '{
              indent = length($1)/2;
              vname[indent] = $2;
              for (i in vname) {if (i > indent) {delete vname[i]}}
              if (length($3) > 0) {
                 vn=""; for (i=0; i<indent; i++) {vn=(vn)(vname[i])("_")}
                 printf("%s%s%s=\"%s\"\n", "'$prefix'",vn, $2, $3);
              }
           }'
         }
         
          for f in $FILES; 
          do 
          
          parse_yaml $f
         
          done 
        working-directory: ./
  
    
    


